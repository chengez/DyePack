exp_name: biology
model_cache_dir: /fs/cml-scratch/yzcheng/cache2/
save_folder: saved_models_new
data_name: MMLU_Pro

# Tokenizer
tokenizer:
  _component_: torchtune.models.qwen2_5.qwen2_5_tokenizer
  path: ${model_cache_dir}/Qwen2_5-7B-Instruct/vocab.json
  merges_file: ${model_cache_dir}/Qwen2_5-7B-Instruct/merges.txt
  max_seq_len: 4096

# Dataset
dataset:
  _component_: torchtune.datasets.instruct_dataset
  source: csv
  data_files: ${data_name}/data/${exp_name}/torchtune_data.csv
  split: train
seed: 8
shuffle: False

# Model Arguments
model:
  _component_: torchtune.models.qwen2_5.qwen2_5_7b_instruct

checkpointer:
  _component_: torchtune.training.FullModelHFCheckpointer
  checkpoint_dir: ${model_cache_dir}/Qwen2_5-7B-Instruct
  checkpoint_files: [
    model-00001-of-00004.safetensors,
    model-00002-of-00004.safetensors,
    model-00003-of-00004.safetensors,
    model-00004-of-00004.safetensors,
  ]
  recipe_checkpoint: null
  output_dir: ${save_folder}/Qwen2_5-7B-Instruct_${exp_name}
  model_type: QWEN2
  safe_serialization: True

resume_from_checkpoint: False

# Fine-tuning arguments
batch_size: 2
epochs: 1
optimizer:
  # _component_: bitsandbytes.optim.PagedAdamW
  _component_: torch.optim.AdamW
  fused: True
  lr: 2e-5
optimizer_in_bwd: True  # True saves memory. Requires gradient_accumulation_steps=1
loss:
  _component_: torchtune.modules.loss.CEWithChunkedOutputLoss
max_steps_per_epoch: null
gradient_accumulation_steps: 1  # Use to increase effective batch size
clip_grad_norm: null
compile: True  # torch.compile the model + loss, True increases speed + decreases memory

# Training environment
device: cuda

# Memory management
enable_activation_checkpointing: True  # True reduces memory
enable_activation_offloading: True  # True reduces memory

# Reduced precision
dtype: bf16

output_dir: logs
# Logging
metric_logger:
  _component_: torchtune.training.metric_logging.DiskLogger
  log_dir: ${output_dir}
log_every_n_steps: 1
log_peak_memory_stats: False


# Profiler (disabled)
profiler:
  _component_: torchtune.training.setup_torch_profiler
  enabled: False

  #Output directory of trace artifacts
  output_dir: ${output_dir}/profiling_outputs

  #`torch.profiler.ProfilerActivity` types to trace
  cpu: True
  cuda: True

  #trace options passed to `torch.profiler.profile`
  profile_memory: False
  with_stack: False
  record_shapes: True
  with_flops: False

  # `torch.profiler.schedule` options:
  # wait_steps -> wait, warmup_steps -> warmup, active_steps -> active, num_cycles -> repeat
  wait_steps: 5
  warmup_steps: 3
  active_steps: 2
  num_cycles: 1